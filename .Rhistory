path <- 'W:/_cam/_raster/_climate/_future/_rcp60/_asc'
namesDirs <- list.dirs(paste0(path, '/_2050/_asc'), recursive = F)
namesDirs <- list.dirs(paste0(path, '/_2050'), recursive = F)
files <- lapply(namesDirs, list.files, full.names = T, pattern = '.asc$')
files
for(i in 1:length(files)){
bios[[i]] <- grep('bio_20', files[[i]], value = T)
}
bios <- list()
for(i in 1:length(files)){
bios[[i]] <- grep('bio_20', files[[i]], value = T)
}
print(bios)
namesDirs <- list.dirs(paste0(path, '/_2030'), recursive = F)
files <- lapply(namesDirs, list.files, full.names = T, pattern = '.asc$')
bios <- list()
for(i in 1:length(files)){
bios[[i]] <- grep('bio_20', files[[i]], value = T)
}
print(bios)
rm(list = ls(
))
library(tidyverse)
library(raster)
library(rgdal)
library(cclust)
library(outliers)
library(dismo)
library(gtools)
library(multcomp)
library(foreign)
library(magrittr)
options(scipen = 9999)
set.seed(1234)
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){
path <- "//mnt/workspace_cluster_9/Coffee_Cocoa2/_cam"
} else {
if(OSys == "Windows"){
path <- "//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam"
}
}
source(paste0(path, "/_codes/_R/_RF/FunctionsRFclustering.R"))
occ  <- read_csv(paste0(path, '/_points/_csv/2_occ_swd.csv'))
occ  <- dplyr::select(occ, Longitude, Latitude, bio_1:bio_33)
norm <- scores(occ[3:ncol(occ)], "z") %>%
cbind(occ[,1:2], .)
norm
env_values <- as.matrix(occ[,3:ncol(occ)])
rm(lis t= ls())
rm(list =ls())
library(tidyverse)
library(raster)
library(rgdal)
library(cclust)
library(outliers)
library(dismo)
library(gtools)
library(multcomp)
library(foreign)
library(magrittr)
options(scipen = 9999)
set.seed(1234)
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){
path <- "//mnt/workspace_cluster_9/Coffee_Cocoa2/_cam"
} else {
if(OSys == "Windows"){
path <- "//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam"
}
}
source(paste0(path, "/_codes/_R/_RF/FunctionsRFclustering.R"))
occ  <- read_csv(paste0(path, '/_points/_csv/2_occ_swd.csv'))
occ  <- dplyr::select(occ, Longitude, Latitude, bio_1:bio_33)
norm <- scores(occ[3:ncol(occ)], "z") %>%
cbind(occ[,1:2], .)
env_values <- as.matrix(occ[,3:ncol(occ)])
datRF      <- as.data.frame(occ[,3:ncol(occ)])
d <- dist(datRF, method = "euclidean")
for(i in 2:ncol(env_values)){
clusterdata        <- cclust(env_values, i,method = "kmeans")
cat(clustIndex(clusterdata, env_values, index = 'calinski'), '\n')
}
clusterdata <- hclust(d, method = "ward.D2")
clusterdata
plot(clusterdata, hang = -0.01, cex = 0.7)
for(i in 2:10){
rect.hclust(clusterdata, k=i)
}
n.cluster   <- sapply(2:5, function(n.cluster)table(cutree(clusterdata,n.cluster)))#table(cutree(clusterdata, k = 2)); table(cutree(clusterdata, k = 3)); table(cutree(clusterdata, k = 4)); table(cutree(clusterdata, k = 5))
no.clusters <- 5
labelRF     <- cutree(clusterdata, no.clusters)
grouped     <- as.data.frame(cbind(env_values, cluster = as.factor(labelRF)))
grouped     <- tbl_df(grouped)
grouped$cluster <- as.factor(grouped$cluster)# grouped[,"cluster"] <- as.factor(grouped[,'cluster'])
descriptors     <- colnames(env_values)
contrastPub <- function(descriptors, grouped, biomains, biolabels, pathGraph, nameGraph, Nrow, Ncol, width, height){
png((filename = paste(pathGraph, nameGraph, sep = '/')), width = width, height = height, res = 120)
par(mfrow = c(Nrow, Ncol))
for(i in 1:length(descriptors)){
formula <- as.formula(paste(descriptors[i], "~ cluster"))
Anov    <- aov(formula = formula, data = grouped)
cont    <- glht(Anov, mcp(cluster = 'GrandMean'))
plot(cont, xlab = NA, sub = NULL, main = NA)
title(main = biomains[i], line = 1.5)
title(ylab = 'Group', line = 2.5)
# title(xlab = paste(biolabels[i], '\n', 'ø', round(mean(grouped[,descriptors[i]]), digits = 1)), line = 3)
title(xlab = paste(biolabels[i], '\n', 'ø', round(mean(extract2((grouped[,descriptors[i]]), 1)), 1), line = 3))
}
dev.off()
}
desc_water          <- descriptors[c(30:32)]
biolabels_water     <- c("Number Months", "mm")
desc_water          <- descriptors[c(30:31)]
biolabels_water     <- c("Number Months", "mm")
biomains_water      <- c("Consecutive Months with less \n Prec than PET", "Sum of water deficit during dry season")
grouped_water       <- grouped[c(desc_water, "cluster")]
namesWater          <- paste0("bio_", 32:33)
contrastPub(descriptors = desc_water, grouped = grouped_water, biomains = biomains_water,
biolabels = biolabels_water, pathGraph = paste0(path, '/_figures/_contrastPlots'),
nameGraph = 'Contrast Plot Water.png', Nrow = 1, Ncol = 2, width = 1000, height = 600)
rm(list = ls())
require(raster)
require(rgdal)
require(tidyverse)
require(spdplyr)
OSys <- Sys.info(); OSys <- OSys[names(OSys)=='sysname']
if(OSys == 'Linux'){
path <- '//mnt/Workspace_cluster_9/Coffee_Cocoa2/_cam'
} else {
if(OSys == 'Windows'){
path <- '//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam'
}
}
path, '/_shp/_base/all_countries.shp'
path
all_countries <- shapefile(paste0(path, '/_shp/_base/all_countries.shp'))
all_countries
df <- read_csv(paste0(path, '/_tables/_FAO/Production_Crops_E_All_Data.csv'))
df_cocoa <- filter(df, Item == 'Cocoa, beans')
shp_cam <- filter(all_countries, UNREG1 == 'Central America')
df_cocoa_cam <- filter(df_cocoa, Area %in% unique(shp_cam$ENGLISH))
indx <- as.data.frame(apply(df_cocoa_cam, 2, function(x) any(is.na(x) | is.infinite(x))))
indx
indx <- rownames_to_column(indx, 'Column')
indx
colnames(indx)[2] <- 'Logica'
columns <- filter(indx, Logica != 'TRUE')$Column
