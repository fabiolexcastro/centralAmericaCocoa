summarize(x = sum(ProdTotal))
df.cnt.sumcrops %>%
group_by(Elemento) %>%
summarize(x = sum(ProdTotal, na.rm = T))
dfSum <- df %>%
group_by(Area, CodigoELemento, Elemento, Unidad, Producto) %>%
summarize(ValorAvg = mean(Valor)) %>%
ungroup()
dfSum
dfSum <- df %>%
group_by(Area, CodigoELemento, Elemento, Unidad, Producto) %>%
summarize(ValorAvg = mean(Valor)) %>%
ungroup() %>%
na.omit()
dfSum
df.cnt <- filter(dfSum, Area != 'América del Centro')
df.cnt.sumcrops <- df.cnt %>%
group_by(Elemento, Unidad, Producto) %>%
summarize(ProdTotal = sum(ValorAvg)) %>%
ungroup()
df.cnt.sumcrops
dfSum
df.cnt <- filter(dfSum, Area != 'América del Centro')
df.cnt
df.cnt.sumcrops <- df.cnt %>%
group_by(Elemento, Unidad, Producto) %>%
summarize(ProdTotal = sum(ValorAvg)) %>%
ungroup()
df.cnt.sumcrops
df.cnt.sumcrops %>%
group_by(Elemento) %>%
summarize(x = sum(ProdTotal, na.rm = T))
df.cnt.sumcrops
filter(df.cnt.sumcrops, Producto == 'Cacao, en grano')
df.cnt.sumcrops %>%
group_by(Elemento) %>%
summarize(x = sum(ProdTotal, na.rm = T))
df.cnt.porc
df.cnt.porc <- df.cnt.sumcrops %>%
mutate()
df.cnt.porc
df.cnt.porc <- df.cnt.sumcrops %>%
filter(Elemento %in% c('Producción', 'Área Cosechada'))
source('//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam/_codes/_r/_production/calcPorcCocoa.R', encoding = 'UTF-8', echo=TRUE)
df.cnt.porc <- df.cnt.sumcrops %>%
filter(Elemento %in% c('Producción', 'Área Cosechada'))
df.cnt.porc
df.cnt
df.cnt
df.cnt.porc <- df.cnt %>%
filter(Elemento %in% c('Producción', 'Área Cosechada')) %>%
group_by(Area, Elemento, Unidad, Producto)
df.cnt.porc
df.cnt.porc <- df.cnt %>%
filter(Elemento %in% c('Producción', 'Área Cosechada')) %>%
group_by(Area, Elemento, Unidad, Producto) %>%
mutate(Porcentaje = (ValorAvg / sum(ValorAvg)) * 100)
source('//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam/_codes/_r/_production/calcPorcCocoa.R', encoding = 'UTF-8', echo=TRUE)
df.cnt.porc
df.cnt.sumcrops
x <- filter(df.cnt, Producto == 'Cacao, en grano')
x
x <- filter(df.cnt, Producto == 'Cacao, en grano', Elemento == 'Producción')
x
x <- filter(df.cnt, Producto == 'Cacao, en grano', Elemento == 'Producción')
x
df.cnt
y <- df.cnt %>%
filter(Elemento == 'Producción') %>%
group_by(Elemento, Producto) %>%
summarize(Value = sum(ValorAvg))
y
df.cnt
x <- filter(df.cnt, Producto == 'Cacao, en grano', Elemento == 'Producción')
y <- df.cnt %>%
filter(Elemento == 'Producción') %>%
group_by(Elemento, Producto) %>%
summarize(Value = sum(ValorAvg))
y
y <- df.cnt %>%
filter(Elemento == 'Producción') %>%
group_by(Elemento, Producto) %>%
summarize(Value = sum(ValorAvg)) %>%
ungroup()
y
View(y)
y <- df.cnt %>%
filter(Elemento == 'Producción') %>%
group_by(Elemento, Producto) %>%
summarize(Value = sum(ValorAvg)) %>%
ungroup() %>%
mutate(Value = round(Value, 0))
View(y)
x
sum(x$ValorAvg)
y <- df.cnt %>%
filter(Elemento == 'Producción') %>%
group_by(Elemento, Producto) %>%
summarize(Value = sum(ValorAvg)) %>%
ungroup() %>%
mutate(Value = round(Value, 0))
y
y
y
x <- filter(df.cnt, Producto == 'Cacao, en grano', Elemento == 'Producción')
x
y
y <- df.cnt %>%
filter(Elemento == 'Producción') %>%
group_by(Area, Elemento, Producto) %>%
summarize(Value = sum(ValorAvg)) %>%
ungroup() %>%
mutate(Value = round(Value, 0))
y
y
y
math.operation
# Load libraries
require(raster)
#require(ncdf)
require(maptools)
require(rgdal)
require(foreach)
require(parallel)
require(doSNOW)
math.operation
df.cnt.sumcrops
df.cnt.sumcrops %>%
group_by(Elemento) %>%
summarize(x = sum(ProdTotal, na.rm = T))
df.cnt.sumcrops
df.cnt.sumcrops
sum(df.cnt.sumcrops$ProdTotal)
sum(df.cnt.sumcrops$ProdTotal)
df.cnt.sumcrops <- df.cnt %>%
group_by(Elemento, Unidad, Producto) %>%
summarize(ProdTotal = round(sum(ValorAvg), 1)) %>%
ungroup()
sum(df.cnt.sumcrops$ProdTotal)
mutate(df.cnt.sumcrops, Porc = (ProdTotal / sum(ProdTotal) * 100)
)
mutate(df.cnt.sumcrops, Porc = (ProdTotal / sum(ProdTotal) * 100)) %>%
filter(Producto == 'Cacao, en grano')
df.cnt.sumcrops
df.cnt.sumcrops <- df.cnt %>%
group_by(Area, Elemento, Unidad, Producto) %>%
summarize(ProdTotal = round(sum(ValorAvg), 1)) %>%
ungroup()
df.cnt.sumcrops
# Load libraries
require(raster)
require(rgdal)
require(dplyr)
require(readr)
require(tibble)
require(tidyr)
require(ggplot2)
require(sf)
# Initial Setup
OSys <- Sys.info(); OSys <- OSys[names(OSys)=='sysname']
if(OSys == 'Linux'){
setwd('//mnt/Workspace_cluster_9/Coffee_Cocoa2/_cam')
} else {
if(OSys == 'Windows'){
setwd('//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam')
}
};
options(scipen = 999)
rm(list = ls())
# Function clean NA's in the dataframe
rmNA <- function(df){
# df <- df.prod.cocoa.cam
indx <- as.data.frame(apply(df, 2, function(x) any(is.na(x) | is.infinite(x)))) %>% rownames_to_column(., 'Column')
colnames(indx)[2] <- 'Logica'
columns <- filter(indx, Logica != TRUE)$Column
y <- df[,columns]
return(y)
}
# Load Data
shp.cnts <- shapefile('_shp/_base/all_countries.shp')
df.prod <- read_csv('_tables/_FAO/Production_Crops_E_All_Data.csv')
df.prod.cocoa <- dplyr::filter(df.prod, Item == 'Cocoa, beans')
# Select all crops to Central America
shp.cam <- shp.cnts[shp.cnts@data$UNREG1 == 'Central America',]
df.prod.cam <- filter(df.prod, Area %in% c('Belize', 'Mexico', 'Costa Rica', 'Panama', 'Nicaragua', 'Guatemala', 'Honduras', 'El Salvador'))
df.prod.cocoa.cam <- filter(df.prod.cocoa, Area %in% c('Belize', 'Mexico', 'Costa Rica', 'Panama', 'Nicaragua', 'Guatemala', 'Honduras', 'El Salvador'))
# Clean dataframe (remove columns with NA's)
df.prod.cam <- rmNA(df = df.prod.cam)
df.prod.cocoa.cam <- rmNA(df = df.prod.cocoa.cam)
#
unique(df.prod.cam$Item)
df_cocoa <- dplyr::filter(df, Item == 'Cocoa, beans')
shp_cam <- all_countries[all_countries@data$UNREG1 == 'Central America',]# shp_cam <- filter(all_countries, UNREG1 == 'Central America')
df_cocoa_cam <- filter(df_cocoa, Area %in% unique(shp_cam@data$ENGLISH))
indx <- as.data.frame(apply(df_cocoa_cam, 2, function(x) any(is.na(x) | is.infinite(x))))
indx <- rownames_to_column(indx, 'Column')
colnames(indx)[2] <- 'Logica'
columns <- filter(indx, Logica != 'TRUE')$Column
df_cocoa_cam <- df_cocoa_cam[,columns]
ncoldf <- ncol(df_cocoa_cam)
df_tidy <- tidyr::gather(df_cocoa_cam, 'year', 'value', 8:61) %>%#melt(df_cocoa_cam, measure = paste0('Y', 1961:2014))
separate(year, c('N', 'year'), sep = 'Y') %>%
dplyr::select(-N) %>%
mutate(year = as.numeric(year))
View(df_tidy)
prod2014 <- filter(df_tidy, year == 2014, Element == 'Production')
sum(prod2014$value)
mean_prod <- filter(df_tidy, Element == 'Production') %>%
group_by(Area) %>%
summarise(Produccion = mean(value),
FirstYear  = min(year),
LastYear   = max(year))
mean_yield<- filter(df_tidy, Element == 'Yield') %>%
group_by(Area) %>%
summarise(Rendimto   = mean(value),
FirstYear  = min(year),
LastYear   = max(year))
mutate(mean_yield, Rendimto = Rendimto / 10)
apply(mean_prod[,2], 2, mean)
apply(mean_prod[,2], 2, sum)
sum(mean_prod$Produccion)
mean(mean_prod$Produccion)
gg_prod <- ggplot(dat = filter(df_tidy, Element == 'Production'), aes(x = year, y = value, colour = Area)) +
geom_line(size = 1.0) +
scale_y_log10() +
theme(legend.position = 'top') +
ylab('Producci?n (Ton) Log10') +
xlab('A?o') +
labs(color = '') +
scale_x_continuous(breaks = seq(1960, 2015, 5))
df
df.prod.cam
df_cocoa <- dplyr::filter(df.prod.cam, Item == 'Cocoa, beans')
colnames(df)
df_cocoa
shp_cam <- all_countries[all_countries@data$UNREG1 == 'Central America',]# shp_cam <- filter(all_countries, UNREG1 == 'Central America')
all_countries
shp_cam <- shp.cnts[shp.cnts@data$UNREG1 == 'Central America',]# shp_cam <- filter(all_countries, UNREG1 == 'Central America')
shp_cam
plot(shp)
plot(shp_cam)
df_cocoa_cam <- filter(df_cocoa, Area %in% unique(shp_cam@data$ENGLISH))
df_cocoa_cam
indx <- as.data.frame(apply(df_cocoa_cam, 2, function(x) any(is.na(x) | is.infinite(x))))
indx
indx <- rownames_to_column(indx, 'Column')
colnames(indx)[2] <- 'Logica'
columns <- filter(indx, Logica != 'TRUE')$Column
df_cocoa_cam <- df_cocoa_cam[,columns]
ncoldf <- ncol(df_cocoa_cam)
df_tidy <- tidyr::gather(df_cocoa_cam, 'year', 'value', 8:61) %>%#melt(df_cocoa_cam, measure = paste0('Y', 1961:2014))
separate(year, c('N', 'year'), sep = 'Y') %>%
dplyr::select(-N) %>%
mutate(year = as.numeric(year))
df_tidy
df_cocoa_cam
melt(df_cocoa_cam, measure = paste0('Y', 1961:2014))
library(reshape2)
library(reshape)
melt(df_cocoa_cam, measure = paste0('Y', 1961:2014))
df_tidy <- tidyr::gather(df_cocoa_cam, 'year', 'value', 8:61) %>%#melt(df_cocoa_cam, measure = paste0('Y', 1961:2014))
separate(year, c('N', 'year'), sep = 'Y') %>%
dplyr::select(-N) %>%
mutate(year = as.numeric(year))
df_tidy
df_tidy <- tidyr::gather(df_cocoa_cam, 'year', 'value', 8:61) %>%#melt(df_cocoa_cam, measure = paste0('Y', 1961:2014))
separate(year, c('N', 'year'), sep = 'Y') %>%
dplyr::select(-N) %>%
mutate(year = as.numeric(year))
df_tidy
df_cocoa_cam
df_cocoa_cam %>%
gather('year', 'value')
df_cocoa_cam %>%
gather('year', 'value', -Area)
df_cocoa_cam
df_cocoa_cam %>%
gather('year', 'value', -Area, -Element, -Unit)
df_cocoa_cam
df_cocoa_cam
df_cocoa_cam
df_cocoa <- dplyr::filter(df.prod.cam, Item == 'Cocoa, beans')
df_cocoa
# Initial Setup
OSys <- Sys.info(); OSys <- OSys[names(OSys)=='sysname']
if(OSys == 'Linux'){
setwd('//mnt/Workspace_cluster_9/Coffee_Cocoa2/_cam')
} else {
if(OSys == 'Windows'){
setwd('//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam')
}
};
options(scipen = 999)
rm(list = ls())
# Function clean NA's in the dataframe
rmNA <- function(df){
# df <- df.prod.cocoa.cam
indx <- as.data.frame(apply(df, 2, function(x) any(is.na(x) | is.infinite(x)))) %>% rownames_to_column(., 'Column')
colnames(indx)[2] <- 'Logica'
columns <- filter(indx, Logica != TRUE)$Column
y <- df[,columns]
return(y)
}
# Load Data
shp.cnts <- shapefile('_shp/_base/all_countries.shp')
shp.cnts
df.prod <- read_csv('_tables/_FAO/Production_Crops_E_All_Data.csv')
# Load Data
shp.cnts <- shapefile('_shp/_base/all_countries.shp')
df.prod <- read_csv('_tables/_FAO/Production_Crops_E_All_Data.csv')
df.prod.cocoa <- dplyr::filter(df.prod, Item == 'Cocoa, beans')
df.prod.cocoa
# Select all crops to Central America
shp.cam <- shp.cnts[shp.cnts@data$UNREG1 == 'Central America',]
df.prod.cam <- filter(df.prod, Area %in% c('Belize', 'Mexico', 'Costa Rica', 'Panama', 'Nicaragua', 'Guatemala', 'Honduras', 'El Salvador'))
df.prod.cam
df.prod.cocoa.cam <- filter(df.prod.cocoa, Area %in% c('Belize', 'Mexico', 'Costa Rica', 'Panama', 'Nicaragua', 'Guatemala', 'Honduras', 'El Salvador'))
df.prod.cocoa.cam
# Clean dataframe (remove columns with NA's)
df.prod.cam <- rmNA(df = df.prod.cam)
df.prod.cam
df.prod.cam <- filter(df.prod, Area %in% c('Belize', 'Mexico', 'Costa Rica', 'Panama', 'Nicaragua', 'Guatemala', 'Honduras', 'El Salvador'))
df.prod.cocoa.cam <- filter(df.prod.cocoa, Area %in% c('Belize', 'Mexico', 'Costa Rica', 'Panama', 'Nicaragua', 'Guatemala', 'Honduras', 'El Salvador'))
df.prod.cocoa.cam
df.prod.cam
df.prod.cocoa.cam
df_cocoa <- dplyr::filter(df.prod.cam, Item == 'Cocoa, beans')
df_cocoa
shp_cam <- shp.cnts[shp.cnts@data$UNREG1 == 'Central America',]# shp_cam <- filter(all_countries, UNREG1 == 'Central America')
df_cocoa_cam <- filter(df_cocoa, Area %in% unique(shp_cam@data$ENGLISH))
d
df_cocoa_cam
indx <- as.data.frame(apply(df_cocoa_cam, 2, function(x) any(is.na(x) | is.infinite(x))))
indx <- rownames_to_column(indx, 'Column')
colnames(indx)[2] <- 'Logica'
columns <- filter(indx, Logica != 'TRUE')$Column
df_cocoa_cam <- df_cocoa_cam[,columns]
df_cocoa_cam
ncoldf <- ncol(df_cocoa_cam)
ncoldf
df_tidy <- tidyr::gather(df_cocoa_cam, 'year', 'value', 8:61) %>%#melt(df_cocoa_cam, measure = paste0('Y', 1961:2014))
separate(year, c('N', 'year'), sep = 'Y') %>%
dplyr::select(-N) %>%
mutate(year = as.numeric(year))
df_tidy
df_tidy
View(df_tidy)
prod2014 <- filter(df_tidy, year == 2014, Element == 'Production')
prod2014
sum(prod2014$value)
# Promedio in all the period
mean_prod <- filter(df_tidy, Element == 'Production') %>%
group_by(Area) %>%
summarise(Produccion = mean(value),
FirstYear  = min(year),
LastYear   = max(year))
mean_yield<- filter(df_tidy, Element == 'Yield') %>%
group_by(Area) %>%
summarise(Rendimto   = mean(value),
FirstYear  = min(year),
LastYear   = max(year))
mutate(mean_yield, Rendimto = Rendimto / 10)
apply(mean_prod[,2], 2, mean)
apply(mean_prod[,2], 2, sum)
sum(mean_prod$Produccion)
mean(mean_prod$Produccion)
gg_prod <- ggplot(dat = filter(df_tidy, Element == 'Production'), aes(x = year, y = value, colour = Area)) +
geom_line(size = 1.0) +
scale_y_log10() +
theme(legend.position = 'top') +
ylab('Producci?n (Ton) Log10') +
xlab('A?o') +
labs(color = '') +
scale_x_continuous(breaks = seq(1960, 2015, 5))
gg_prod
gg_area <- ggplot(dat = filter(df_tidy, Element == 'Area harvested'), aes(x = year, y = value, colour = Area)) +
geom_line(size = 1.0) +
#scale_y_log10() +
theme(legend.position = 'top') +
ylab('Area (Has)') +
xlab('A?o') +
labs(color = '') +
scale_x_continuous(breaks = seq(1960, 2015, 5))
gg_area
gg_prod
write.csv(df_tidy, '_tables/_PRODUCTION/df_tidy_statsFAO.csv', row.names = FALSE)
df_tidy
filter(df_tidy, Element == 'Production')
filter(df_tidy, Element == 'Production')
gsub('Belize', 'Belice', df_tidy$Area)
df_tidy$Area <- gsub('Belize', 'Belice', df_tidy$Area)
df_tidy
df_tidy
gg_prod <- ggplot(dat = filter(df_tidy, Element == 'Production'), aes(x = year, y = value, colour = Area)) +
geom_line(size = 1.0) +
scale_y_log10() +
theme(legend.position = 'top') +
ylab('Producción (Ton) Log10') +
xlab('Año') +
labs(color = '') +
scale_x_continuous(breaks = seq(1960, 2015, 5))
gg_prod
gg_area <- ggplot(dat = filter(df_tidy, Element == 'Area harvested'), aes(x = year, y = value, colour = Area)) +
geom_line(size = 1.0) +
#scale_y_log10() +
theme(legend.position = 'top') +
ylab('Area (Has)') +
xlab('A?o') +
labs(color = '') +
scale_x_continuous(breaks = seq(1960, 2015, 5))
gg_area <- ggplot(dat = filter(df_tidy, Element == 'Area harvested'), aes(x = year, y = value, colour = Area)) +
geom_line(size = 1.0) +
#scale_y_log10() +
theme(legend.position = 'top') +
ylab('Area (Has)') +
xlab('A?o') +
labs(color = '') +
scale_x_continuous(breaks = seq(1960, 2015, 5))
gg_area
filter(df_tidy, Element == 'Production', Area == 'Guatemala')
df_gtm <- filter(df_tidy, Element == 'Production', Area == 'Guatemala')
View(df_gtm)
df_blc <- filter(df_tidy, Element == 'Production', Area == 'Belice')
df_blc
df_blc <- filter(df_tidy, Element == 'Production', Area == 'Belice')
View(df_blc)
df_mxc <- filter(df_tidy, Element == 'Production', Area == 'Mexico')
df_mxc
summary(df_mxc$value)
summary(df_mxc$value)
which.min(df_mxc$value)
which.max(df_mxc$value)
df_mxc[which.max(df_mxc$value),]
summary(df_mxc$value)
# Load libraries
require(raster)
require(rgdal)
require(dplyr)
require(readr)
require(tibble)
require(tidyr)
require(ggplot2)
require(sf)
# Initial Setup
OSys <- Sys.info(); OSys <- OSys[names(OSys)=='sysname']
if(OSys == 'Linux'){
setwd('//mnt/Workspace_cluster_9/Coffee_Cocoa2/_cam')
} else {
if(OSys == 'Windows'){
setwd('//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam')
}
};
options(scipen = 999)
rm(list = ls())
# Function clean NA's in the dataframe
rmNA <- function(df){
# df <- df.prod.cocoa.cam
indx <- as.data.frame(apply(df, 2, function(x) any(is.na(x) | is.infinite(x)))) %>% rownames_to_column(., 'Column')
colnames(indx)[2] <- 'Logica'
columns <- filter(indx, Logica != TRUE)$Column
y <- df[,columns]
return(y)
}
# Load Data
shp.cnts <- shapefile('_shp/_base/all_countries.shp')
df.prod <- read_csv('_tables/_FAO/Production_Crops_E_All_Data.csv')
df.prod.cocoa <- dplyr::filter(df.prod, Item == 'Cocoa, beans')
# Select all crops to Central America
shp.cam <- shp.cnts[shp.cnts@data$UNREG1 == 'Central America',]
df.prod.cam <- filter(df.prod, Area %in% c('Belize', 'Mexico', 'Costa Rica', 'Panama', 'Nicaragua', 'Guatemala', 'Honduras', 'El Salvador'))
df.prod.cocoa.cam <- filter(df.prod.cocoa, Area %in% c('Belize', 'Mexico', 'Costa Rica', 'Panama', 'Nicaragua', 'Guatemala', 'Honduras', 'El Salvador'))
# Clean dataframe (remove columns with NA's)
df.prod.cam <- rmNA(df = df.prod.cam)
df.prod.cocoa.cam <- rmNA(df = df.prod.cocoa.cam)
#
unique(df.prod.cam$Item)
df_cocoa <- dplyr::filter(df.prod.cam, Item == 'Cocoa, beans')
shp_cam <- shp.cnts[shp.cnts@data$UNREG1 == 'Central America',]# shp_cam <- filter(all_countries, UNREG1 == 'Central America')
df_cocoa_cam <- filter(df_cocoa, Area %in% unique(shp_cam@data$ENGLISH))
indx <- as.data.frame(apply(df_cocoa_cam, 2, function(x) any(is.na(x) | is.infinite(x))))
indx <- rownames_to_column(indx, 'Column')
colnames(indx)[2] <- 'Logica'
columns <- filter(indx, Logica != 'TRUE')$Column
df_cocoa_cam <- df_cocoa_cam[,columns]
ncoldf <- ncol(df_cocoa_cam)
df_tidy <- tidyr::gather(df_cocoa_cam, 'year', 'value', 8:61) %>%#melt(df_cocoa_cam, measure = paste0('Y', 1961:2014))
separate(year, c('N', 'year'), sep = 'Y') %>%
dplyr::select(-N) %>%
mutate(year = as.numeric(year))
df_cocoa_cam
tidyr::gather(df_cocoa_cam, 'year', 'value', 8:61) %>%#melt(df_cocoa_cam, measure = paste0('Y', 1961:2014))
separate(year, c('N', 'year'), sep = 'Y')
df_cocoa_cam
df_cocoa_cam
df_cocoa_cam <- df_cocoa_cam[,columns]
df_cocoa_cam
View(df_cocoa_cam)
df_cocoa_cam <- filter(df_cocoa, Area %in% unique(shp_cam@data$ENGLISH))
df_cocoa_cam
indx <- as.data.frame(apply(df_cocoa_cam, 2, function(x) any(is.na(x) | is.infinite(x))))
indx <- rownames_to_column(indx, 'Column')
colnames(indx)[2] <- 'Logica'
columns <- filter(indx, Logica != 'TRUE')$Column
df_cocoa_cam <- df_cocoa_cam[,columns]
ncoldf <- ncol(df_cocoa_cam)
df_tidy <- tidyr::gather(df_cocoa_cam, 'year', 'value', 8:61) %>%#melt(df_cocoa_cam, measure = paste0('Y', 1961:2014))
separate(year, c('N', 'year'), sep = 'Y') %>%
dplyr::select(-N) %>%
mutate(year = as.numeric(year))
df.prod.cam
df.prod.cocoa.cam
View(df.prod.cocoa.cam)
