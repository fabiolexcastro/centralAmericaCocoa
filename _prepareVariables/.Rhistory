} else {
if(OSys == 'Windows'){
path <- '//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam'
}
}
bio20 <- function(files, path_output, threshold, mask){
layers     <- list.files(files, full.names = T, pattern = '.asc$') %>%
mixedsort() %>%
grep('prec', ., value = T)
preclayers <- stack(layers)
precbin    <- reclassify(preclayers, c(-Inf, threshold, 1, threshold, Inf, NA))
names(precbin) <- names(preclayers)
twoyears   <- addLayer(precbin, precbin)
allperiods <- stack()
print('Stack ...')
for(i in 1:12){
oneyear <- twoyears[[i:(i+11)]]
drymonths <- cumsum(oneyear)
maxnumber <- max(drymonths, na.rm = T)
allperiods <- addLayer(allperiods, maxnumber)
rm(maxnumber)
rm(drymonths)
}
bio_20 <- max(allperiods, na.rm = T)
bio_20[is.na(bio_20)] <- 0
bio_20 <- raster::mask(bio_20, mask)
print('Write Raster')
writeRaster(bio_20, paste(path_output, 'bio_20.asc', sep = '/'))
rm(allperiods)
}
library(foreach)
library(doSNOW) ## For Windows
cl <- makeCluster(19) ## For Windows
registerDoSNOW(cl)  ## For Windows
years   <- c('_2030', '_2050')
models  <- list.files(paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[1]))
models
foreach(y = 1:length(years)) %do% {
# print(years[y])
foreach(j = 1:length(models), .packages = c('raster', 'rgdal', 'dplyr', 'gtools', 'foreach')) %dopar% {
# print(models[j])
bio20(files = paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j]),
path_output = paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j]),
threshold = 100,
mask = shapefile(paste0(path, '/_shp/mask_cam1.shp')))
}
}
library(gtools)
library(stringr)
library(rgdal)
library(raster)
library(maptools)
library(dismo)
library(SDMTools)
library(maps)
library(rgeos)
library(dplyr)
library(foreach)
library(doSNOW)
library(doMC) #For Linux
OSys <- Sys.info(); OSys <- OSys[names(OSys)=='sysname']
if(OSys == 'Linux'){
path <- '//mnt/workspace_cluster_9/Coffee_Cocoa2/_cam'
} else {
if(OSys == 'Windows'){
path <- '//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam'
}
}
bio20 <- function(files, path_output, threshold, mask){
layers     <- list.files(files, full.names = T, pattern = '.asc$') %>%
mixedsort() %>%
grep('prec', ., value = T)
preclayers <- stack(layers)
precbin    <- reclassify(preclayers, c(-Inf, threshold, 1, threshold, Inf, NA))
names(precbin) <- names(preclayers)
twoyears   <- addLayer(precbin, precbin)
allperiods <- stack()
print('Stack ...')
for(i in 1:12){
oneyear <- twoyears[[i:(i+11)]]
drymonths <- cumsum(oneyear)
maxnumber <- max(drymonths, na.rm = T)
allperiods <- addLayer(allperiods, maxnumber)
rm(maxnumber)
rm(drymonths)
}
bio_20 <- max(allperiods, na.rm = T)
bio_20[is.na(bio_20)] <- 0
bio_20 <- raster::mask(bio_20, mask)
print('Write Raster')
writeRaster(bio_20, paste(path_output, 'bio_20.asc', sep = '/'))
rm(allperiods)
}
library(foreach)
library(doSNOW) ## For Windows
years   <- c('_2030', '_2050')
models  <- list.files(paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[1]))
models
i = y = 1
bio20(files = paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j]),
path_output = paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j]),
threshold = 100,
mask = shapefile(paste0(path, '/_shp/mask_cam1.shp')))
j = y = 1
bio20(files = paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j]),
path_output = paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j]),
threshold = 100,
mask = shapefile(paste0(path, '/_shp/mask_cam1.shp')))
library(gtools)
library(stringr)
library(rgdal)
library(raster)
library(maptools)
library(dismo)
library(SDMTools)
library(maps)
library(rgeos)
library(dplyr)
library(foreach)
library(doSNOW)
library(doMC)
OSys <- Sys.info(); OSys <- OSys[names(OSys)=='sysname']
if(OSys == 'Linux'){
path <- '//mnt/workspace_cluster_9/Coffee_Cocoa2/_cam'
} else {
if(OSys == 'Windows'){
path <- '//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam'
}
}
bio20 <- function(files, path_output, threshold, mask){
layers     <- list.files(files, full.names = T, pattern = '.asc$') %>%
mixedsort() %>%
grep('prec', ., value = T)
preclayers <- stack(layers)
precbin    <- reclassify(preclayers, c(-Inf, threshold, 1, threshold, Inf, NA))
names(precbin) <- names(preclayers)
twoyears   <- addLayer(precbin, precbin)
allperiods <- stack()
print('Stack ...')
for(i in 1:12){
oneyear <- twoyears[[i:(i+11)]]
drymonths <- cumsum(oneyear)
maxnumber <- max(drymonths, na.rm = T)
allperiods <- addLayer(allperiods, maxnumber)
rm(maxnumber)
rm(drymonths)
}
bio_20 <- max(allperiods, na.rm = T)
bio_20[is.na(bio_20)] <- 0
bio_20 <- raster::mask(bio_20, mask)
print('Write Raster')
writeRaster(bio_20, paste(path_output, 'bio_20.asc', sep = '/'))
rm(allperiods)
}
library(foreach)
library(doSNOW) ## For Windows
rasterOptions(tmpdir = paste0(path, '/_temp2'))
years   <- c('_2030', '_2050')
models  <- list.files(paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[1]))
y <- 1
j <- 1
bio20(files = paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j]),
path_output = paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j]),
threshold = 100,
mask = shapefile(paste0(path, '/_shp/mask_cam1.shp')))
y <- 2
j <- 1
files = paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j])
path_output = paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j])
threshold = 100
mask = shapefile(paste0(path, '/_shp/mask_cam1.shp'))
layers     <- list.files(files, full.names = T, pattern = '.asc$') %>%
mixedsort() %>%
grep('prec', ., value = T)
layers
rasterOptions(tmpdir = paste0(path, '/_temp2'))
preclayers <- stack(layers)
precbin    <- reclassify(preclayers, c(-Inf, threshold, 1, threshold, Inf, NA))
names(precbin) <- names(preclayers)
twoyears   <- addLayer(precbin, precbin)
allperiods <- stack()
print('Stack ...')
for(i in 1:12){
oneyear <- twoyears[[i:(i+11)]]
drymonths <- cumsum(oneyear)
maxnumber <- max(drymonths, na.rm = T)
allperiods <- addLayer(allperiods, maxnumber)
rm(maxnumber)
rm(drymonths)
}
bio_20 <- max(allperiods, na.rm = T)
bio_20[is.na(bio_20)] <- 0
bio_20 <- raster::mask(bio_20, mask)
print('Write Raster')
path_output
writeRaster(bio_20, paste(path_output, 'bio_20.asc', sep = '/'))
g= gc)
g = gc()
rm(list = ls())
library(gtools)
library(stringr)
library(rgdal)
library(raster)
library(maptools)
library(dismo)
library(SDMTools)
library(maps)
library(rgeos)
library(dplyr)
library(foreach)
library(doSNOW)
library(doMC) #For Linux
OSys <- Sys.info(); OSys <- OSys[names(OSys)=='sysname']
if(OSys == 'Linux'){
path <- '//mnt/workspace_cluster_9/Coffee_Cocoa2/_cam'
} else {
if(OSys == 'Windows'){
path <- '//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam'
}
}
bio20 <- function(files, path_output, threshold, mask){
layers     <- list.files(files, full.names = T, pattern = '.asc$') %>%
mixedsort() %>%
grep('prec', ., value = T)
preclayers <- stack(layers)
precbin    <- reclassify(preclayers, c(-Inf, threshold, 1, threshold, Inf, NA))
names(precbin) <- names(preclayers)
twoyears   <- addLayer(precbin, precbin)
allperiods <- stack()
print('Stack ...')
for(i in 1:12){
oneyear <- twoyears[[i:(i+11)]]
drymonths <- cumsum(oneyear)
maxnumber <- max(drymonths, na.rm = T)
allperiods <- addLayer(allperiods, maxnumber)
rm(maxnumber)
rm(drymonths)
}
bio_20 <- max(allperiods, na.rm = T)
bio_20[is.na(bio_20)] <- 0
bio_20 <- raster::mask(bio_20, mask)
print('Write Raster')
writeRaster(bio_20, paste(path_output, 'bio_20.asc', sep = '/'))
rm(allperiods)
}
rasterOptions(tmpdir = paste0(path, '/_temp3'))
cl <- makeCluster(18) ## For Windows
registerDoSNOW(cl)  ## For Windows
years   <- c('_2030', '_2050')
models  <- list.files(paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[1]))
models
y <- 2
y
foreach(j = 2:length(models), .packages = c('raster', 'rgdal', 'dplyr', 'gtools', 'foreach')) %dopar% {
# print(models[j])
bio20(files = paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j]),
path_output = paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j]),
threshold = 100,
mask = shapefile(paste0(path, '/_shp/mask_cam1.shp')))
}
library(stringr)
library(rgdal)
library(raster)
library(maptools)
library(dismo)
library(SDMTools)
library(maps)
library(rgeos)
library(doParallel)
library(doMC)
library(gtools)
library(doSNOW)
library(dplyr)
OSys <- Sys.info(); OSys <- OSys[names(OSys)=='sysname']
if(OSys == 'Linux'){
path <- '//mnt/workspace_cluster_9/Coffee_Cocoa2/_cam'
} else {
if(OSys == 'Windows'){
path <- '//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam'
}
}
path
cumTemp <- function(x) {
p <- matrix(nrow = 1, ncol = 4)
colnames(p) <- paste('bio', 21:24, sep = '')
w <- x[25:36] ### tmax
y <- x[13:24] ### tmean
x <- x[1:12]  ### Prec-PET
z <- x
### if the values are NA the bios are NA
if(all(is.na(x))) {
p[,'bio21'] <- NA
p[,'bio22'] <- NA
p[,'bio23'] <- NA
p[,'bio24'] <- NA
} else {
## cumulative deficit to determine dry season (=Bio22)
# print('Bio 22...')
x <- z
lng <- length(x)
x <- c(x, x[1:12])
x[x>0] <- NA
cumdef <- matrix(ncol = 12, nrow = lng)
for (i in 1:12) {
cumdef[, i] <- x[i:(lng + i - 1)]
}
p[,'bio22'] <- min(c(0,apply(cumdef, MARGIN = 1, FUN = cumsum)),na.rm=T)
## cumulative surplus to determine growing season
x <- z
lng <- length(x)
x <- c(z, z[1:12])
x[x<0] <- NA
cumplus <- matrix(ncol = 12, nrow = lng)
for (i in 1:12) {
cumplus[, i] <- x[i:(lng + i - 1)]
}
### If there is no dry season
### the length becomes 0
### the growing season temp is the mean of monthly mean temp
### the dry season max temp is the max temp of the driest month
if(p[,'bio22']==0){
p[,'bio21'] <- 0
p[,'bio23'] <- mean(y)
p[,'bio24'] <- w[which.min(z)]
} else {
### the mean temperatures for all possible seasons
y <- c(y, y[1:12])
n <- matrix(ncol = 12, nrow = lng)
for (i in 1:12) {
n[, i] <- y[i:(lng + i - 1)]
}
meantemp <- apply(n, MARGIN = 1, FUN = cumsum)
### the max temperatures for all possible seasons
w <- c(w, w[1:12])
n <- matrix(ncol = 12, nrow = lng)
for (i in 1:12) {
n[, i] <- w[i:(lng + i - 1)]
}
maxtemp <- apply(n, MARGIN = 1, FUN = cumsum)
### Consecutive months with Prec<PET (=bio21)
x <- z
x <- c(x, x[1:12])
x[x>0] <- NA
x[x<0] <- 1
o <- matrix(ncol = 12, nrow = lng)
for (i in 1:12) {
o[, i] <- x[i:(lng + i - 1)]
}
con_months <- max(apply(o,1,cumsum),na.rm=T)
p[,'bio21'] <- con_months
### if the dry season is 12 months the growing season mean is the mean of the wettest month
if(con_months==12){
p[,'bio23'] <- y[which.max(z)]
} else {
### The meantemp of the wettest season
p[,'bio23'] <- meantemp[which.max(apply(cumplus, MARGIN = 1, FUN = cumsum))]/(12-con_months)
}
### The mean maxtemp of the driest season
p[,'bio24'] <- maxtemp[which.min(apply(cumdef, MARGIN = 1, FUN = cumsum))]/con_months
}
}
return(p)
}
etpvars <- function(x){
p <- matrix(nrow = 1, ncol = 9)
colnames(p) = paste('bio', 25:33, sep = '')
tavg <- x[25:36] ### Temp
prec <- x[13:24] ### PREC
pet <- x[1:12]  ### PET
### if the values are NA the bios are NA
if(all(is.na(x))) {
return(p)
} else {
window <- function(x)  {
lng <- length(x)
x <- c(x,  x[1:3])
m <- matrix(ncol = 3, nrow = lng)
for (i in 1:3) { m[,i] <- x[i:(lng+i-1)] }
apply(m, MARGIN = 1, FUN = sum)
}
### BIO_23: Annual PET
p[,1] <- sum(pet)
### BIO_24: PET seasonality (Coefficient of Variation)
p[,2] <- cv(pet)
### BIO_25: MAX PET
p[,3] <- max(pet)
### BIO_26: Min PET
p[,4] <- min(pet)
### BIO_27: Range of PET (PETmax-PETmin)
p[,5] <- p[,3]-p[,4]
wet <- window(prec)
hot <- window(tavg)/3
pet2 <- c(pet,pet[1:2])
### BIO_28: PET of wettest quarter
p[,6] <- sum(pet2[c(which.max(wet):(which.max(wet)+2))])
### BIO_29:	PET of driest quarter
p[,7] <- sum(pet2[c(which.min(wet):(which.min(wet)+2))])
### BIO_30:	PET of warmest quarter
p[,8] <- sum(pet2[c(which.max(hot):(which.max(hot)+2))])
### BIO_31:	PET of coldest quarter
p[,9] <- sum(pet2[c(which.min(hot):(which.min(hot)+2))])
}
round(p, digits = 2)
return(p)
}
dividTemp <- function(files, nameVar){
OSys <- Sys.info(); OSys <- OSys[names(OSys)=='sysname']
if(OSys == 'Linux'){
path <- '//mnt/workspace_cluster_9/Coffee_Cocoa2/_cam'
} else {
if(OSys == 'Windows'){
path <- '//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam'
}
}
source(paste0(path, '/_codes/_r/_prepareVariables/functionsBios.R'))
View(dividVar)
a <- 1
a <-1
b <- 2
a
b
rm(a, b)
a
b
nameSrad <- paste0('srad_', 1:12)
nameSrad
writeRaster
library(raster)
writeRaster
??writeRaster
require(raster)
require(rgdal)
require(tidyverse)
require(spdplyr)
OSys <- Sys.info(); OSys <- OSys[names(OSys)=='sysname']
if(OSys == 'Linux'){
path <- '//mnt/Workspace_cluster_9/Coffee_Cocoa2/_cam'
} else {
if(OSys == 'Windows'){
path <- '//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam'
}
}
all_countries <- shapefile(paste0(path, '/_shp/_base/all_countries.shp'))
df <- read_csv(paste0(path, '/_tables/_FAO/Production_Crops_E_All_Data.csv'))
df_cocoa <- filter(df, Item == 'Cocoa, beans')
shp_cam <- filter(all_countries, UNREG1 == 'Central America')
df_cocoa_cam <- filter(df_cocoa, Area %in% unique(shp_cam$ENGLISH))
df_cocoa_cam
indx <- as.data.frame(apply(df_cocoa_cam, 2, function(x) any(is.na(x) | is.infinite(x))))
indx <- rownames_to_column(indx, 'Column')
colnames(indx)[2] <- 'Logica'
columns <- filter(indx, Logica != 'TRUE')$Column
df_cocoa_cam <- df_cocoa_cam[,columns]
df_tidy <- tidyr::gather(df_cocoa_cam, 'year', 'value',  8:ncol(df_cocoa_cam)) %>%#melt(df_cocoa_cam, measure = paste0('Y', 1961:2014))
separate(year, c('N', 'year'), sep = 'Y') %>%
dplyr::select(-N) %>%
mutate(year = as.numeric(year))
df_tidy
df_tidy
View(df_tidy)
filter(df_tidy, year == 2014)
prod2014 <- filter(df_tidy, year == 2014, Element == 'Production')
prod2014
prod2014 <- filter(df_tidy, year == 2014, Element == 'Production') %>%
sum(value)
prod2014 <- filter(df_tidy, year == 2014, Element == 'Production') %>%
sum(.$value)
prod2014 <- filter(df_tidy, year == 2014, Element == 'Production')
sum(prod2014$value)
