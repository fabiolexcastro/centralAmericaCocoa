{
    "collab_server" : "",
    "contents" : "\n# Calculate bioclimatic variables about ETP\n# Bunn & Castro\n# CIAT, 2017\n\n# Load Libraries\n\nlibrary(stringr)\nlibrary(rgdal)\nlibrary(raster)\nlibrary(maptools)\nlibrary(dismo)\nlibrary(SDMTools)\nlibrary(maps)\nlibrary(rgeos)\nlibrary(doParallel)\n# library(doMC)\nlibrary(gtools)\nlibrary(doSNOW)\nlibrary(dplyr)\nlibrary(snowfall)\n\n# Files\n\nOSys <- Sys.info(); OSys <- OSys[names(OSys)=='sysname']\nif(OSys == 'Linux'){\n  path <- '//mnt/workspace_cluster_9/Coffee_Cocoa2/_cam' \n} else {\n  if(OSys == 'Windows'){\n    path <- '//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam'\n  }\n}\n\nsource(paste0(path, '/_codes/_r/_prepareVariables/functionsBios.R'))\n\n# WorldClim SRAD\n\nrasterOptions(tmpdir = '/home/fcastro/temporal')\n# rasterOptions(tmpdir = paste0(path, '/_temp'))\n\nif(file.exists(paste0(path, '/_rData/sradstack.rData'))){\n  \n  load(paste0(path, '/_rData/sradstack.rData'))\n  \n} else{\n  \n  sradfiles <- list.files(path = paste0(path, '/_raster/_climate/_current/_rad/_tif'), pattern = '.tif$', recursive = T, full.names = T)\n  sradstack <- stack(sradfiles)\n  names(sradstack) <- paste('srad_', 01:12, sep='') # Change the names to files\n  sradstack <- sradstack*0.408/1000\n  save(sradstack, file = paste0(path, '/_rData/sradstack.rData'))\n  \n}\n\nx <- unstack(sradstack)\nnameSrad <- paste0('srad_', 1:12)\n\nMap('writeRaster', x = x, filename = paste0(path, '/_raster/_climate/_current/_sradOk/', nameSrad, '.asc'))\n\n# ------- Current variables -------\n\nfiles_current <- list.files(paste0(path, '/_raster/_climate/_current/_asc'), full.names = T, pattern = '.asc$')\ntoMatch <- c('pr', 'tm')\nnamesVars <- gsub('.asc', '', basename(files_current)) %>%\n                gsub('\\\\d', '', .) %>%\n                gsub('_', '', .) %>%\n                unique() %>%\n                grep(paste0(toMatch, collapse = '|'), ., value = T)\n\n# namesVars <- c('tmean', 'tmax', 'tmin')\n\nlapply(files_current, nameVar = namesVars, FUN = dividTemp)\nlapply(files_current, FUN = dividTemp, nameVar = namesVars)\n#lapply(files_current, nameVar = 'tmin', FUN = dividTemp)\n \n# files <- lapply(namesDirs, list.files, full.names = T, pattern = '.asc$')\n\ntmin_stack  <- dividTemp(files = files_current, nameVar = 'tmin')\ntmax_stack  <- dividTemp(files = files_current, nameVar = 'tmax')\ntmean_stack <- dividTemp(files = files_current, nameVar = 'tmean')\nprec_stack  <- grep('prec', files_current, value = T) %>%\n                  mixedsort() %>%\n                  stack()\nzeroraster  <- tmin_stack[[1]] * 0 + 1 \n\nETstack <- 0.0023*sradstack*sqrt(reclassify(tmax_stack - tmin_stack, c(-Inf, 0, 0)))*(tmean_stack + 17.8)\nnames(ETstack) <-str_replace(names(ETstack),'srad','PET')\nETstack <- ETstack * c(31,29,31,30,31,30,31,31,30,31,30,31)\n\ndeficitstack <- prec_stack - ETstack\nDefAndTemp <- cbind(as.matrix(deficitstack), as.matrix(tmean_stack), as.matrix(tmax_stack))\nbiovalues  <- t(apply(DefAndTemp, 1, cumTemp))\n\nnamesVars <- paste0('bio_', 30:33)\n\nfor(i in 1:length(namesVars)){\n  \n  layer <- zeroraster\n  values(layer) <- biovalues[,i]\n  writeRaster(layer, paste0(path, '/_raster/_climate/_current/_asc/', namesVars[i]), format = 'ascii', overwrite = T, NAflag = -9999)\n  \n}\n\nETPAndPrec <- cbind(as.matrix(ETstack),as.matrix(prec_stack),as.matrix(tmean_stack))\netpbios    <- t(apply(ETPAndPrec, 1, etpvars))\nnamesETPs  <- paste0('bio_', 21:29)\n\nfor(i in 1:ncol(etpbios)){\n  \n  layer <- zeroraster\n  values(layer) <- etpbios[,i]\n  writeRaster(layer, paste0(path, '/_raster/_climate/_current/_asc/', namesETPs[i]), format = 'ascii', overwrite = T, NAflag = -9999)\n  \n}\n\n\n\n# ------- Future variables -------\n\nyears <- c('_2030', '_2050')\nmodels <- list.files(paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[1]))\n\nregisterDoMC(11)\n# cl <- makeCluster(length(models)) #N?mero de nucleos a utilizar\n# cl <- makeCluster(18)\n# registerDoSNOW(cl)\n\ny = 1 # tropico\n\n# foreach(y = 1:length(years)) %do% {\n\n#foreach(j = 8:length(models), .packages = c('raster', 'rgdal', 'dplyr', 'gtools', 'foreach', 'stringr', 'maptools', 'rgeos')) %dopar% {\n\nfor(j in 1:length(models)){\n  \n    print(models[j])\n    \n    sradstack <- list.files(paste0(path, '/_raster/_climate/_current/_sradOk'), full.names = T, pattern = '.asc$') %>%\n                    mixedsort() %>%\n                    stack()\n  \n    print('sradStack')\n    \n    files <- paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j]) %>%\n              list.files(., full.names = T, pattern = '.asc$') %>%\n              mixedsort()\n    \n    print(paste0(models[j], ' files'))\n    \n    tminstack  <- dividVar(files, 'tmin')\n    tmeanstack <- dividVar(files, 'tmean')\n    tmaxstack  <- dividVar(files, 'tmax')\n    precstack  <- dividVar(files, 'prec')\n    zeroraster <- tminstack[[1]] * 0 + 1 \n    \n    print(paste0(models[j], ' to ETStack'))\n    \n    ETstack <- 0.0023*sradstack*sqrt(reclassify(tmaxstack - tminstack, c(-Inf, 0, 0)))*(tmeanstack + 17.8)\n    names(ETstack) <-str_replace(names(ETstack),'srad','PET')\n    ETstack <- ETstack * c(31,29,31,30,31,30,31,31,30,31,30,31)\n    \n    print(paste0(models[j], ' to deficit stack'))\n    \n    rm(tminstack, tmaxstack)\n    \n    # ------ Def and Temp ------\n    \n    # deficitstack <- precstack-ETstack\n    # DefAndTemp   <- cbind(as.matrix(deficitstack), as.matrix(tmeanstack), as.matrix(tmaxstack))\n    # \n    # # Proof snowfall\n    # \n    # sfInit(parallel = TRUE, cpus = 5)\n    # sfExport('DefAndTemp')\n    # sfExport('cumTemp')\n    # sfLibrary(rgeos)\n    # sfLibrary(raster)\n    # sfLibrary(rgdal)\n    # sfLibrary(snowfall)\n    # \n    # biovalues <- sfApply(DefAndTemp, 1, cumTemp)\n    # biovalues_2 <- t(biovalues) \n    # biovalues_vars <- paste0('bio_', 30:33)\n    \n    #biovalues <-  t(apply(DefAndTemp, 1, cumTemp))\n    \n    # values(layer) <- biovalues[,i]\n    # writeRaster(layer, paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', biovalues_vars)\n\n    # print(paste0(models[j], ' to Write other Var'))\n    \n    # for(i in 1:ncol(biovalues)){\n    #   \n    #   layer <- zeroraster\n    #   values(layer) <- biovalues[,i]\n    #   writeRaster(layer, paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j], '/',  biovalues_vars[i], '.asc'), overwrite = T, NAflag = -9999)\n    #   \n    # }\n    \n    # print('ETP Bioclimatics')\n    \n    # ETP Bioclimatics\n    \n    ETPAndPrec <- cbind(as.matrix(ETstack),as.matrix(precstack),as.matrix(tmeanstack))\n    \n    rm(ETstack, precstack)\n    \n    sfInit(parallel = TRUE, cpus = 4)\n    sfExport('ETPAndPrec')\n    sfExport('etpvars')\n    sfLibrary(rgeos)\n    sfLibrary(raster)\n    sfLibrary(rgdal)\n    \n    etpbios <- sfApply(ETPAndPrec, 1, etpvars)\n    etpbios_2 <- t(etpbios) \n    \n    print(paste0(models[j], ' to Write ETP Vars'))\n    \n    namesETPs  <- paste0('bio_', 21:29)\n    etp_bioList <- list()\n    \n    for(i in 1:ncol(etpbios_2)){\n      \n      etp_bioList[[i]] <- zeroraster\n      values(etp_bioList[[i]]) <- etpbios_2[,i]\n      \n    }\n    \n    for(i in 1:length(etp_bioList)){\n      \n      writeRaster(etp_bioList[[i]], paste0(path, '/_raster/_climate/_future/_rcp60/_asc/', years[y], '/', models[j], '/',  namesETPs[i], '2.asc'), overwrite = T, NAflag = -9999)\n      \n    }\n    \n    toRemove <- list.files('/home/fcastro/temporal', full.names = T)\n    lapply(toRemove, file.remove)\n    \n    print(paste0(models[j], ' Finish...'))\n\n}\n  \n\n\n",
    "created" : 1498414661489.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "59|28|116|0|\n",
    "hash" : "2175384015",
    "id" : "510174B7",
    "lastKnownWriteTime" : 1498527766,
    "last_content_update" : 1498527767426,
    "path" : "W:/_cam/_codes/_r/_prepareVariables/5_otherVariables_2.R",
    "project_path" : "5_otherVariables_2.R",
    "properties" : {
        "source_window_id" : ""
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}