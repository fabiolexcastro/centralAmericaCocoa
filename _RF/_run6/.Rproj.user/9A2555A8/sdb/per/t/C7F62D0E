{
    "collab_server" : "",
    "contents" : "\n# CIAT, 2016 Updated: February 2017\n# Author: Bunn & Castro\n# Target: cluster analysis\n\n# Load libraries\nlibrary(dplyr)\nlibrary(raster)\nlibrary(rgdal)\nlibrary(cclust)\nlibrary(dismo)\nlibrary(gtools)\nlibrary(sp)\nlibrary(rgeos)\nlibrary(FactoMineR)\nlibrary(pROC)\nlibrary(randomForest)\n\n# Initial setup\nrm(list = ls())\noptions(scipen = 9999)\nset.seed(1234)\nsetwd('Z:/_cam')\nrun <- '_run6'\nmyproj <- CRS('+proj=longlat +datum=WGS84')\nsource('_codes/_R/_RF/_run6/FunctionsRFclustering.R')\n\n# Function\nrf.clust <- function(occ, nforest, ntrees, nVars, nclasses){\n  \n  datRF_presences <- occ[,3:ncol(occ)]\n  print(nrow(datRF))\n  \n  attach(datRF_presences)\n  no.forests <- nforest\n  no.trees <- ntrees\n  distRF_presences <- RFdist(datRF_presences, mtry1 = nVars, no.trees, no.forests, addcl1 = T, addcl2 = F, imp = T, oob.prox1 = T)\n  no.presencesclasses <- nclasses\n  labelRF <- pamNew(distRF_presences$cl1, no.presencesclasses)\n  print(table(labelRF))\n  clusterdata <- hclust(as.dist(distRF_presences$cl1), method = 'ward.D2')\n  \n  return(list(labelRF, clusterdata))\n  \n}\n\n# Load data\nload(paste0('_rData/', run, '/clustereddata.rData'))\nif(!file.exists('_RF/_run6/_models')){ dir.create('_RF/_run6/_models')}\nmodelfolder <- paste0('_RF/', run, '/_models')\nclimatefolder <- '_raster/_climate/_current/_asc'\n\n# clusteredpresdata <- cbind(norm[,1:2], env_values, cluster = labelRF) %>% na.omit() %>% tbl_df()\n# lyrs <- list.files(climatefolder, full.names = T, pattern = '.asc$') %>% grep('bio', ., value = T) %>% mixedsort() %>% stack() # clusterpresdata <- occ_cluster\n\n# Load climate data\ntoMatch <- 'bio' #<- c('bio', 'af')\nbias.raster <- raster('_raster/bias_raster.asc')\nlistado <- list.files(climatefolder, full.names = T, pattern = '.asc$') %>% \n             mixedsort() %>%\n             grep(paste0(toMatch, collapse = '|'), ., value = TRUE) %>%\n             unique()\nclimatelayers <- stack(listado)\ncrs(climatelayers)<- myproj\nocc_cluster <- clusteredpresdata\nSPspecies <- SpatialPoints(occ_cluster[,1:2]) # SPspecies <- SpatialPoints(clusteredpresdata[,1:2]) #Data frame to Shp\ncrs(SPspecies) <- myproj\n\n# Generation of background (pseudoabsences) - We used 1:1 (1 pseudoabsence for each presence)\nback_raster <- climatelayers[[21]] * 0 + 1 \nspeciescell <- raster::extract(back_raster, SPspecies, cellnumber=TRUE)\nback_raster[speciescell[,1]]  <- NA #remove the cell with presences\nsamplesize      <- round(min(summary(as.factor(clusteredpresdata$cluster))) / 2, 0) #CHANGE #samplesize <- sum(summary(as.factor(clusteredpresdata$cluster))) # dissolvee <- gUnaryUnion(districts_mwi) #dissolve polygon\nNumberOfClusters  <- max(clusteredpresdata$cluster) \nratio             <- NumberOfClusters/1\nnumberofpresences <- nrow(clusteredpresdata) #numberofpresences <- NumberOfClusters * samplesize\n\n# bias raster - process\nback_raster <- bias.raster\nspeciescell <- raster::extract(bias.raster, SPspecies, cellnumber = TRUE)\nback_raster[speciescell[,1]]  <- NA #remove the cell with presences\nsamplesize  <- round(min(summary(as.factor(clusteredpresdata$cluster))) / 2, 0) #CHANGE #samplesize <- sum(summary(as.factor(clusteredpresdata$cluster))) # dissolvee <- gUnaryUnion(districts_mwi) #dissolve polygon\nNumberOfClusters <- max(clusteredpresdata$cluster) \nratio <- NumberOfClusters/1\nnumberofpresences <- nrow(clusteredpresdata) #numberofpresences <- NumberOfClusters * samplesize\n\nback_raster <- resample(back_raster, climatelayers[[21]]) %>%\n                  raster::crop(., climatelayers[[21]]) %>%\n                  raster::mask(., climatelayers[[21]])\n\ncrs(back_raster) <- myproj\nback <- randomPoints(back_raster, 1*numberofpresences, prob = T) %>%\n            as_data_frame()\ncoordinates(back) <- ~ x + y\nback_swd  <- raster::extract(climatelayers, back) %>% \n                cbind(coordinates(back), .)\n\nnrow(back_swd)\nnrow(back_swd[complete.cases(back_swd),])\n\nif(!file.exists(' _points/_csv/_run6/bck_swd.csv')){\n  write.csv(back_swd, paste0('_points/_csv/_run6/bck_swd.csv'), row.names = F) #new line\n}\n\n# Cluster analysis to pseudoabsences\n\nbckclust <- rf.clust(occ = back_swd, nforest = 50, ntrees = 500, nVars = 8, nclasses = 2)\ndatRF <- as.data.frame(back_swd[,3:ncol(back_swd)])\nattach(datRF)\nno.forests <- 50#raw = 25\nno.trees <- 500\ndistRF <- RFdist(datRF, mtry1 = 8, no.trees, no.forests, addcl1 = T, addcl2 = F, imp =T, oob.prox1 = T)# mtry1 = 4 raw  # es la cantidad de variables a utilizar en cada no\nno.absenceclasses <- 2\nlabelRF <- pamNew(distRF$cl1, no.absenceclasses)\ndetach(datRF)\nclassdata <- cbind(pb = as.factor(labelRF), back_swd[,3:ncol(back_swd)])\n\n# Join presences and background\npresvalue_swd  <- clusteredpresdata[,3:ncol(clusteredpresdata)] %>%\n                    cbind(pb = (clusteredpresdata$cluster + no.absenceclasses), .) %>%\n                    na.omit() %>%\n                    as.data.frame() %>%\n                    mutate(cluster = cluster + no.absenceclasses)\npresvalue_swd <- dplyr::select(presvalue_swd, pb, bio_1:bio_33)\npresvalue_swd <- mutate(presvalue_swd, pb = as.factor(pb))\n\nclassdata_2 <- cbind(pb = as.data.frame(classdata)$pb, classdata[,2:ncol(classdata)]) # Background\ndim(classdata_2); dim(presvalue_swd)\nallclasses_swd <- rbind(classdata_2, presvalue_swd)\nunique(allclasses_swd$pb)\n\nwrite.csv(allclasses_swd, paste0(path, '/_points/_csv/all_clases_swd_run5.csv'), row.names = FALSE)\n\n# Model RF\nmodel1 <- as.formula(paste('factor(pb) ~', paste(paste('bio',c(1:33), sep='_'), collapse = '+', sep =' ')))\nrflist <- vector('list', 50) \nauc <- vector('list', 50)\n\nfor(repe in 1:50){ # 50 bosques\n  \n  print(repe)\n  pressample <- list()\n  \n  for (i in 1:(NumberOfClusters+no.absenceclasses)){\n    \n    if(any(i==c(1:no.absenceclasses))) { \n      \n      rows <- sample(rownames(allclasses_swd[allclasses_swd$pb==i,]), \n                              size = samplesize*NumberOfClusters/2/no.absenceclasses)\n    } else {\n      rows <- sample(rownames(allclasses_swd[allclasses_swd$pb==i,]), size=samplesize)\n    }\n    pressample[[i]] <- allclasses_swd[rows,] \n  }\n  \n  species <- na.omit(do.call(rbind, pressample)) \n  head(species)\n  Samplesplit <- sample(rownames(species)) \n  \n  envtrain <- species[Samplesplit[1:(0.8*nrow(species))],] \n  envtest <- species[Samplesplit[(0.8*nrow(species)):nrow(species)],] \n  \n  rfmodel <- randomForest(model1, data = envtrain, ntree = 500, na.action = na.omit, nodesize = 2) \n  \n  save(rfmodel, file = paste(modelfolder, '/', 'RF_' ,NumberOfClusters, 'Prob_' , 'rep_' ,repe, '.rdata' ,sep=''))\n  rflist[[repe]] <- rfmodel\n  \n  # AUC \n  predicted <- as.numeric(predict(rfmodel, envtest))\n  observed <- as.vector(envtest[,'pb'])\n  auc[[repe]] <- auc(observed, predicted) \n  rm(rfmodel)\n  \n  cat(auc[[repe]] ,'\\n')\n  \n}\n\nauc <- unlist(auc)\nrff <- do.call(randomForest::combine, rflist)\nimportance <- as.data.frame(rff$importance)\n\nsave(rflist, file = paste(modelfolder, '/rflist_', NumberOfClusters, '.rdata', sep=''))\nsave(importance, file = paste0('_rData/', run, '/importanceRF.rData'))\nsave(auc, file = paste0('_rData/', run, '/aucRF_dist.rData'))\nsave(rff, file = paste0('_rData/', run, '/rff_dist.rData'))\n",
    "created" : 1512995239100.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2974282338",
    "id" : "C7F62D0E",
    "lastKnownWriteTime" : 1509041833,
    "last_content_update" : 1509041833,
    "path" : "Z:/_cam/_codes/_r/_RF/_run6/2_clusterRF.R",
    "project_path" : "2_clusterRF.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}