{
    "collab_server" : "",
    "contents" : "\n# CIAT, 2016 Updated: February 2017\n# Author: Bunn & Castro\n# Target: cluster analysis\n\n# Load libraries\n\nlibrary(tidyverse)\nlibrary(raster)\nlibrary(rgdal)\nlibrary(cclust)\nlibrary(outliers)\nlibrary(dismo)\nlibrary(gtools)\nlibrary(multcomp)\nlibrary(sp)\nlibrary(rgeos)\nlibrary(outliers)  \nlibrary(FactoMineR)\nlibrary(pROC)\nlibrary(randomForest)\n\n# Load data\n\nset.seed(1234)\n\nOSys <- Sys.info(); OSys <- OSys[names(OSys)=='sysname']\nif(OSys == 'Linux'){\n  path <- '//mnt/workspace_cluster_9/Coffee_Cocoa2/_cam' \n} else {\n  if(OSys == 'Windows'){\n    path <- '//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam'\n  }\n}\n\nsource(paste0(path, '/_codes/_r/_RF/FunctionsRFclustering.R'))\nrun <- '_run5'\n# load(paste0(path, '/_rData/', run, 'occ.rData'))\n# load(paste0(path, '/_rData/', run, '/occ_cluster.Rdata'))\n# load(paste0(path, '/_rData/', run, '/clusteredpresdata.Rdata'))\nload(paste0(path, '/_rData/', run, '/clusterpresdata.rData'))\nmyproj <- CRS('+proj=longlat +datum=WGS84')\n\nmodelfolder <- paste0(path, '/_RF/', run, '/_models')\nclimatefolder <- paste0(path, '/_raster/_climate/_current/_asc')\n\n# clusteredpresdata <- cbind(norm[,1:2], env_values, cluster = labelRF) %>%\n#                           na.omit() %>%\n#                           tbl_df()\n\n# lyrs <- list.files(climatefolder, full.names = T, pattern = '.asc$') %>%\n#             grep('bio', ., value = T) %>%\n#             mixedsort() %>%\n#             stack()\n\n# clusterpresdata <- occ_cluster\n\n# Load climate data\n\ntoMatch           <- 'bio' #<- c('bio', 'af')\nlistado           <- list.files(climatefolder, full.names = T, pattern = '.asc$') %>% \n                            mixedsort() %>%\n                            grep(paste0(toMatch, collapse = '|'), ., value = TRUE) %>%\n                            unique()\nclimatelayers     <- stack(listado)\ncrs(climatelayers)<- myproj\nclusteredpresdata <- occ_cluster\nSPspecies         <- SpatialPoints(occ_cluster[,1:2]) \n# SPspecies         <- SpatialPoints(clusteredpresdata[,1:2]) #Data frame to Shp\ncrs(SPspecies)    <- myproj\n\nbias.raster <- raster(paste0(path, '/_raster/bias_raster.asc'))\n\n# Generation of background (pseudoabsences) - We used 1:1 (1 pseudoabsence for each presence)\n\nback_raster       <- climatelayers[[21]] * 0 + 1 \nspeciescell       <- raster::extract(back_raster, SPspecies, cellnumber=TRUE)\nback_raster[speciescell[,1]]  <- NA #remove the cell with presences\nsamplesize        <- round(min(summary(as.factor(clusteredpresdata$cluster))) / 2, 0) #CHANGE #samplesize <- sum(summary(as.factor(clusteredpresdata$cluster))) # dissolvee <- gUnaryUnion(districts_mwi) #dissolve polygon\nNumberOfClusters  <- max(clusteredpresdata$cluster) \nratio             <- NumberOfClusters/1\nnumberofpresences <- nrow(clusteredpresdata) #numberofpresences <- NumberOfClusters * samplesize\n\n# bias raster - process\n\nback_raster       <- bias.raster\nspeciescell       <- raster::extract(bias.raster, SPspecies, cellnumber=TRUE)\nback_raster[speciescell[,1]]  <- NA #remove the cell with presences\nsamplesize        <- round(min(summary(as.factor(clusteredpresdata$cluster))) / 2, 0) #CHANGE #samplesize <- sum(summary(as.factor(clusteredpresdata$cluster))) # dissolvee <- gUnaryUnion(districts_mwi) #dissolve polygon\nNumberOfClusters  <- max(clusteredpresdata$cluster) \nratio             <- NumberOfClusters/1\nnumberofpresences <- nrow(clusteredpresdata) #numberofpresences <- NumberOfClusters * samplesize\n\n#\n\nback_raster <- resample(back_raster, climatelayers[[21]]) %>%\n                  raster::crop(., climatelayers[[21]]) %>%\n                  raster::mask(., climatelayers[[21]])\n\ncrs(back_raster) <- myproj\nback <- randomPoints(back_raster, 1*numberofpresences, prob = T) %>%\n            as_data_frame()\ncoordinates(back) <- ~ x + y\nback_swd  <- raster::extract(climatelayers, back) %>% \n                cbind(coordinates(back), .)\n\nnrow(back_swd)\nnrow(back_swd[complete.cases(back_swd),])\n\n# back_swd  <- raster::extract(climatelayers, bck_coords[,1:2]) %>% # New line\n#                       cbind(bck_coords, .)\n# \n# write.csv(back_swd, paste0(path, '/_points/_csv/bck_swd.csv'), row.names = F) #new line\n\n\n# back_swd2 <- back_swd[sample(nrow(back_swd), numberofpresences),]\n# row.names(back_swd) <- 1:nrow(back)\n\n# Cluster analysis to pseudoabsences\n\nenv_values_bck <- as.matrix(back_swd[,3:ncol(back_swd)])\ndatRF          <- as.data.frame(env_values_bck)\nd              <- dist(datRF, method = 'euclidean')\n\n# for(i in 2:ncol(env_values_bck)){ #for(i in 2:20){\n#   \n#   clusterdata        <- cclust(env_values_bck, i, method = 'kmeans')\n#   cat(clustIndex(clusterdata, env_values_bck, index = 'calinski'), '\\n')\n# }\n\nclusterdata          <- hclust(d, method='ward.D2')\nplot(clusterdata, hang = -0.01, cex = 0.7)\n\nfor(i in 2:10){\n  \n  rect.hclust(clusterdata, k = i) \n  \n}\n\nno.clusters                <- 2\nlabelRF                    <- cutree(clusterdata, no.clusters)\n\nback_swd <- tbl_df(back_swd[complete.cases(back_swd),])\nenv_values_cluster_bck <- cbind(back_swd, labelRF)\nbck_coords             <- cbind(back_swd[,c(1:2)], labelRF)\n\nsave(bck_coords, file = paste0(path, '/_rData/', run, '/bck_coords.rData'))\nwrite.csv(bck_coords, paste0(path, '/_points/_csv/bck_run5.csv'), row.names = FALSE)\n\nbck_coords <- read.csv(paste0(path, '/_points/_csv/bck_run5.csv'))\n\n# RF\n\ndatRF <- as.data.frame(back_swd[,3:ncol(back_swd)]) #Be care with the first number [,1:...]\n\nattach(datRF)\nno.forests                 <- 50#raw = 25\nno.trees                   <- 500\ndistRF                     <- RFdist(datRF, mtry1 = 8, no.trees, no.forests, addcl1 = T, addcl2 = F, imp =T, oob.prox1 = T)# mtry1 = 4 raw  # es la cantidad de variables a utilizar en cada no\nno.absenceclasses          <- 2\nlabelRF                    <- pamNew(distRF$cl1, no.absenceclasses)\ndetach(datRF)\n# classdata                  <- cbind(pb = as.factor(labelRF), back_swd[,3:ncol(back_swd)])\nclassdata                  <- cbind(pb = as.factor(labelRF), back_swd[,3:ncol(back_swd)])\n\npresvalue_swd              <- clusteredpresdata[,3:ncol(clusteredpresdata)] %>%\n                                cbind(pb = (clusteredpresdata$cluster + no.absenceclasses), .) %>%\n                                na.omit() %>%\n                                as.data.frame()\n\npresvalue_swd <- raster::extract(climatelayers, clusteredpresdata[,1:2]) %>%\n                    cbind(clusteredpresdata[,1:2], ., clusteredpresdata[,3])\ncolnames(presvalue_swd)[ncol(presvalue_swd)] <- 'cluster'\npresvalue_swd$pb <- presvalue_swd$cluster + 2; bckpres <- presvalue_swd\npresvalue_swd    <- dplyr::select(presvalue_swd, -cluster, -Lon, - Lat)\npresvalue_swd    <- dplyr::select(presvalue_swd, pb, bio_1:bio_33)\n\nclassdata_2                <- cbind(pb = as.data.frame(classdata)$pb, classdata[,2:ncol(classdata)])\ndim(classdata_2); dim(presvalue_swd)\nnrow(presvalue_swd[complete.cases(presvalue_swd),])\npresvalue_swd <- presvalue_swd[complete.cases(presvalue_swd),]\n\npresvalue_swd$pb <- as.factor(presvalue_swd$pb)\nallclasses_swd  <- rbind(classdata_2, presvalue_swd[,1:34])\n\n# classdata_3 <- classdata_2[,c(1, 3:ncol(classdata_2))]\n# allclasses_swd  <- rbind(classdata_3, presvalue_swd[,1:34])\n\nwrite.csv(allclasses_swd, paste0(path, '/_points/_csv/all_clases_swd_run5.csv'), row.names = FALSE)\n\n# Model RF\n\nmodel1                     <- as.formula(paste('factor(pb) ~', paste(paste('bio',c(1:33), sep='_'), collapse = '+',sep=' ')))\n\nrflist                     <- vector('list', 50) \n\nfor (repe in 1:50){ # 50 bosques\n  \n  pressample <- list()\n  \n  for (i in 1:(NumberOfClusters+no.absenceclasses)){\n    \n    if(any(i==c(1:no.absenceclasses))) { \n      \n      rows          <- sample(rownames(allclasses_swd[allclasses_swd$pb==i,]), \n                              size = samplesize*NumberOfClusters/2/no.absenceclasses)\n    } else {\n      rows          <- sample(rownames(allclasses_swd[allclasses_swd$pb==i,]), \n                              size=samplesize)\n    }\n    pressample[[i]] <- allclasses_swd[rows,] \n  }\n  \n  species           <- na.omit(do.call(rbind, pressample)) \n  head(species)\n  Samplesplit       <- sample(rownames(species)) \n  \n  envtrain          <- species[Samplesplit[1:(0.8*nrow(species))],] \n  envtest           <- species[Samplesplit[(0.8*nrow(species)):nrow(species)],] \n  \n  rfmodel           <- randomForest(model1, data = envtrain, ntree = 500, na.action = na.omit \n                                    , nodesize = 2) \n  \n  save(rfmodel, file = paste(modelfolder, '/', 'RF_' ,NumberOfClusters, 'Prob_' , 'rep_' ,repe, '.rdata' ,sep=''))\n  rflist[[repe]]    <- rfmodel\n  \n  # AUC \n  \n  predicted         <- as.numeric(predict(rfmodel, envtest))\n  observed          <- as.vector(envtest[,'pb'])\n  auc               <- auc(observed, predicted) \n  rm(rfmodel)\n  \n  cat(auc,'\\n')\n  \n}\n\nrff <- do.call(randomForest::combine, rflist)\nimportance <- as.data.frame(rff$importance)\nclass(importance)\n\nsave(rflist, file = paste(modelfolder, '/rflist_', NumberOfClusters, '.rdata', sep=''))\nsave(importance, file = paste0(path, '/_rData/', run, '/importanceRF.rData'))\nsave(auc, file = paste0(path, '/_rData/', run, '/aucRF_dist.rData'))\nsave(rff, file = paste0(path, '/_rData/', run, '/rff_dist.rData'))\n",
    "created" : 1505158343669.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2257960594",
    "id" : "60773486",
    "lastKnownWriteTime" : 1503074958,
    "last_content_update" : 1503074958,
    "path" : "W:/_cam/_codes/_r/_RF/1_clusterRF.R",
    "project_path" : "1_clusterRF.R",
    "properties" : {
        "source_window_id" : ""
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}