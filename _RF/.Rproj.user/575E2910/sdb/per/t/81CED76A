{
    "collab_server" : "",
    "contents" : "\n# CIAT, 2016 Updated: February 2017\n# Author: Bunn & Castro\n# Target: cluster analysis\n\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(tidyr)\nlibrary(raster)\nlibrary(rgdal)\nlibrary(cclust)\nlibrary(outliers)\nlibrary(dismo)\nlibrary(gtools)\nlibrary(multcomp)\nlibrary(foreign)\nlibrary(magrittr)\nlibrary(sf)\nlibrary(rgeos)\n\n# library(R.basic)\n# install.packages(c(\"R.basic\"), contriburl=\"http://www.braju.com/R/repos/\")\n\noptions(scipen = 9999)\nset.seed(1234)\nrun <- '_run5'\n\nOSys <- Sys.info(); OSys <- OSys[names(OSys)==\"sysname\"]\nif(OSys == \"Linux\"){\n  path <- \"//mnt/workspace_cluster_9/Coffee_Cocoa2/_cam\" \n} else {\n  if(OSys == \"Windows\"){\n    path <- \"//dapadfs/Workspace_cluster_9/Coffee_Cocoa2/_cam\"\n  }\n}\n\nsource(paste0(path, '/_codes/_R/_RF/FunctionsRFclustering.R'))\n\nclimatefolder <- paste0(path, '/_raster/_climate/_current/_asc')\nlyrs <- list.files(climatefolder, full.names = T, pattern = '.asc$') %>%\n            grep('bio', ., value = T) %>%\n            mixedsort() %>%\n            stack()\n\nocc  <- read_csv(paste0(path, '/_points/_csv/4_occ_swd.csv'))\nocc  <- dplyr::select(occ, Lon, Lat, bio_1:bio_33)\nnorm <- scores(occ[,3:ncol(occ)], \"z\") %>%\n               cbind(occ[,1:2], .)\n\nsrtm <- raster(paste0(path, '/_raster/_srtm/srtm_v41_30s'))\nmask <- raster(paste0(path, '/_raster/_mask/mask_cam_2_5min.tif'))\n\nocc_srtm <- raster::extract(srtm, occ[,1:2]) %>%\n                cbind(occ, altitude = .) \n\n# Remove  bias according with the resoluciton 2.5 arc-minutes\n\ndup_cell <- function(path_mask, path_df){\n  \n  mask  <- raster(path_mask)\n  df    <- read.csv(path_df)\n  \n  cellNum <- raster::extract(mask, df[,c('Lon', 'Lat')], cellnumbers = T) \n  cells   <- xyFromCell(mask, cellNum[,'cells'])\n  dupvec  <- duplicated(cells[,c('x', 'y')])\n  occ_rmDupCell <- tbl_df(df[!dupvec,])\n  occ_DupCell   <- tbl_df(df[dupvec,])\n  \n  return(list(occ_rmDupCell, occ_DupCell))\n  \n}\n\ndup <- dup_cell(path_mask = paste0(path, '/_raster/_mask/mask_cam_2_5min.tif'), path_df = paste0(path, '/_points/_csv/4_occ_swd.csv'))\nocc <- dup[[2]] %>%\n          dplyr::select(Lon, Lat, bio_1:bio_33)\n\n# occGTM <- read_csv(paste0(path, '/_points/_new/_second/coordsAllWGS.csv'))\n# filter(occ, Lon %in% occGTM$Lon & Lat %in% occGTM$Lat)\n\n# Remove outliers according with the z scores normal\n \n# 1st Way\nnorm <- as_data_frame(scores(occ[,3:ncol(occ)], 'z'))\nhead(norm)\n\nnorm_na <- norm\nnorm_na[abs(norm_na)>3.5]  <- NA \nnormpoints <- cbind(occ[,1:2], norm_na) %>%\n                na.omit(.) %>%\n                tbl_df()\n\n# 2nd Way\n\nscores <- apply(occ[,3:ncol(occ)], 2, zscore) %>%\n              t() %>%\n              cbind(occ[,1:2], .) %>%\n              as_data_frame()\n\n\nnas <- list()\n\nfor(i in 1:33){\n  \n  nas[[i]] <- which(abs(norm[,i]) > 3.5)\n  \n}\n\npos <- unique(sort(unlist(nas)))\nnrow(norm) - nrow(normpoints) \nocc[pos,]\nsummary(occ_srtm[pos,'altitude'])\n\nocc <- normpoints\n\n# Filter by altitude\n\nocc_srtm <- raster::extract(srtm, occ[,1:2]) %>%\n              cbind(occ[,1:2], altitude = .) %>%\n              tbl_df()\n\n# filter(occ_srtm, altitude > 1300)\n\nwrite.csv(occ, paste0(path, '/_points/_csv/4_occ_swd_rm.csv'), row.names = F)\n\n# Go to script that to make the count by country - then, do background sampling probability\n\n# ------- Background sampling probability -------\n\nprodCocoa <- read_csv(paste0(path, '/_tables/_FAO/summ_2000_2010.csv'))\nadm0      <- st_read(paste0(path, '/_shp/_base/_admCountries/CAM_Adm0.shp')) %>%\n                dplyr::select(ISO, NAME_0, NAME_ENGLI) %>%\n                mutate(NAME_ENGLI = as.character(NAME_ENGLI))\n\n# count points by country\n\ncntOcc <- read.csv(paste0(path, '/_points/_csv/countOcc.csv')) %>%\n            mutate(NAME_0 = as.character(NAME_0))\nbias <- inner_join(prodCocoa, cntOcc, by = c('Area' = 'NAME_0')) %>%\n              mutate(prob = count/Produccion)\nbias.shape <- inner_join(adm0, bias, by = c('NAME_ENGLI' = 'Area'))\n\n# bias.raster <- rasterize(bias.shape, lyr, field = 'prob', fun = 'mean')#bias.raster <- poly_to_raster(bias.shape, lyrs[[1]], copy.data = TRUE)\n\nbias.raster <- raster(paste0(path, '/_raster/bias_raster.asc'))\n\n# ----\n\n# filter(occ_srtm, altitude > 1200)\n# summary(occ_srtm$altitude) #There isn't presencies abov\n\n# save(occ, file = paste0(path, '/_rData/', run, '/occ.rData'))\n\n# nrow(norm[complete.cases(norm),]\n\n# Histogram\n\nfor (i in 1:33){\n  \n  png((filename = paste0(path, '/_figures/_hist/_run4/', 'bio_', i, '.png')), width = 600, height = 450, res = 100)\n  hist(normpoints[,paste(\"bio_\",i,sep=\"\")], main=NULL, xlab = \"Z-Score\")\n  title(main=paste(\"Bio_\",i,sep=\"\"))\n  dev.off()\n  \n}\n\n# norm[abs(norm)>3.5]  <- NA\n# head(norm); head(dist)\n#\n# normpoints           <- cbind(occ[,2:3], norm) %>%\n#                           na.omit()\n#\n# # QQNorm\n#\n# for (i in 1:ncol(norm)){\n#\n#   png((filename = paste0(path, \"/_plots/_qqPlot\", \"/\", \"bio_\", i, \".png\")), width = 600, height = 450, res = 100)\n#   qqnorm(normpoints[,paste(\"bio_\",i,sep=\"\")],main=NULL)\n#   qqline(normpoints[,paste(\"bio_\",i,sep=\"\")],main=NULL)\n#   title(main=paste(\"Bio \",i,sep=\"\"))\n#   dev.off()\n#\n# }\n\n# round(cor(normpoints[,paste(\"bio_\",1:ncol(norm),sep=\"\")],method=\"pearson\"),2)\n\nenv_values <- as.matrix(occ[,3:ncol(occ)])\ndatRF      <- as.data.frame(occ[,3:ncol(occ)])\n\nsave(datRF, file = paste0(path, '/_rData/', run, '/datRF.rData'))  #file run 4 quedo mal\nd <- dist(datRF, method = \"euclidean\")  \n\n# for(i in 2:ncol(env_values)){\n#   \n#   clusterdata        <- cclust(env_values, i,method = \"kmeans\")\n#   cat(clustIndex(clusterdata, env_values, index = 'calinski'), '\\n')\n# }\n\nclusterdata <- hclust(d, method = \"ward.D2\")\nplot(clusterdata, hang = -0.01, cex = 0.7)\n\nfor(i in 2:10){ \n  \n  rect.hclust(clusterdata, k=i) \n  \n}\n\n# Cluster number\n\nn.cluster   <- sapply(2:5, function(n.cluster)table(cutree(clusterdata,n.cluster)))#table(cutree(clusterdata, k = 2)); table(cutree(clusterdata, k = 3)); table(cutree(clusterdata, k = 4)); table(cutree(clusterdata, k = 5))\nno.clusters <- 5\nlabelRF     <- cutree(clusterdata, no.clusters)\ngrouped     <- as.data.frame(cbind(env_values, cluster = as.factor(labelRF)))\ngrouped     <- tbl_df(grouped)\n\nocc_cluster <- cbind(occ[,1:2], grouped[,'cluster'])\n\nsave(occ_cluster, file = paste0(path, '/_rData/', run, '/occ_cluster.Rdata'))\n\n# OJO\n\nenv_values2 <- raster::extract(lyrs, occ_cluster[,1:2]) %>%\n                  cbind(occ_cluster, .)\nenv_values2 <- tbl_df(env_values2)\n\nclusteredpresdata <- dplyr::select(env_values2, Lon, Lat, bio_1:bio_33, cluster)\n\nsave(clusteredpresdata, file = paste0(path, '/_rData/', run, 'clusteredpresdata.Rdata'))\nsave(no.clusters, labelRF, norm, env_values, file = paste0(path, '/_rData/', run, '/clusterpresdata.Rdata'))\n# load(paste0(path, '/_rdata/_run1/clusterpresdata.Rdata'))\n\n# --=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--\n# Contrast plot for publication\n# --=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--\n\ngrouped$cluster <- as.factor(grouped$cluster)# grouped[,\"cluster\"] <- as.factor(grouped[,'cluster'])\ndescriptors     <- colnames(env_values)\n\n# Function of contrast publication\n\ncontrastPub <- function(descriptors, grouped, biomains, biolabels, pathGraph, nameGraph, Nrow, Ncol, width, height){   \n  \n  png((filename = paste(pathGraph, nameGraph, sep = '/')), width = width, height = height, res = 120)\n  par(mfrow = c(Nrow, Ncol))\n  \n  for(i in 1:length(descriptors)){\n    \n    formula <- as.formula(paste(descriptors[i], \"~ cluster\"))\n    Anov    <- aov(formula = formula, data = grouped)\n    cont    <- glht(Anov, mcp(cluster = 'GrandMean'))\n    plot(cont, xlab = NA, sub = NULL, main = NA)\n    title(main = biomains[i], line = 1.5)\n    title(ylab = 'Group', line = 2.5)\n    # title(xlab = paste(biolabels[i], '\\n', '?', round(mean(grouped[,descriptors[i]]), digits = 1)), line = 3) \n    title(xlab = paste(biolabels[i], '\\n', 'ø', round(mean(extract2((grouped[,descriptors[i]]), 1)), 1), line = 3)) \n    \n  }  \n  \n  dev.off()\n}\n\n\n# Temperature (centigrados)\n\ncentigrados         <- c(1, 2, 5, 6, 7, 8, 9, 10, 11, 32, 33)\ndesc_temp_grados    <- names(grouped[,centigrados])\ngrouped_temp_grados <- grouped[centigrados] %>%\n                          cbind(., grouped['cluster']) %>%\n                          mutate(bio_1 = bio_1/10,\n                                 bio_2 = bio_2/10,\n                                 bio_5 = bio_5/10,\n                                 bio_6 = bio_6/10,\n                                 bio_7 = bio_7/10,\n                                 bio_8 = bio_8/10,\n                                 bio_9 = bio_9/10,\n                                 bio_10 = bio_10/10,\n                                 bio_11 = bio_11/10) \nbiolabels_temp_grados <- rep(\"°C\", length(centigrados))\nbiomains_temp_grados  <- c(\"Annual mean temp\", \"Mean diurnal range\", \"Max Temp of Warmest Month\", \"Min temp of coldest month\", \n                           \"Temp annual range\", \"Mean temp of wettest quarter\", \"Mean temp of driest quarter\", \"Mean temp of warmest quarter\", \"Mean temp of coldest quarter\", \n                           \"Mean temp during \\n growing season\", \"Max dry season temp\")\n\ncontrastPub(descriptors = desc_temp_grados, grouped = grouped_temp_grados, biomains = biomains_temp_grados,\n            biolabels = biolabels_temp_grados, pathGraph = paste0(path, '/_figures/_contrastPlots/', run), \n            nameGraph = 'Contrast Plot Temp Grados.png', Nrow = 4, Ncol = 3, width = 1200, height = 1000)\n\n# Temperature (no centigrados)\n\nnoCentigrados             <- c(3, 4)\ndesc_temp_nogrados        <- names(grouped[noCentigrados])  \ngrouped_temp_nogrados     <- grouped[noCentigrados] %>%\n                                cbind(., grouped['cluster'])\nbiolabels_temp_nogrados   <- rep(\"-\", length(noCentigrados)) \nbiomains_temp_nogrados    <- c('Isothermality (bio 2/bio 7) * 100', 'Temperature seasonality (sd * 100))')\n                               \ncontrastPub(descriptors = desc_temp_nogrados, grouped = grouped_temp_nogrados, biomains = biomains_temp_nogrados,\n            biolabels = biolabels_temp_nogrados, pathGraph = paste0(path, '/_figures/_contrastPlots/', run), \n            nameGraph = 'Contrast Plot Temp No Grados.png', Nrow = 1, Ncol = 2, width = 1400, 700)\n\n\n# Precipitation\n\ndesc_ppt       <- descriptors[c(12:20)]\nbiomains_ppt   <- c(\"Annual prec\", \"Prec of wettest month\", \"Prec of driest month\", \"Prec seasonality\", \"Prec of wettest quarter\", \"Prec of driest quarter\", \"Prec of warmest quarter\", \"Prec of coldest quarter\", \"Number of consecutive months \\n less 100 mm\")\ngrouped_ppt    <- grouped[,c(desc_ppt, \"cluster\")]\nbiolabels_ppt  <- c(rep(\"mm\", 3), \"-\", rep(\"mm\",4),\"Number months\")\n\ncontrastPub(descriptors = desc_ppt, grouped = grouped_ppt, biomains = biomains_ppt,\n            biolabels = biolabels_ppt, pathGraph = paste0(path, '/_figures/_contrastPlots/', run), \n            nameGraph = 'Contrast Plot Precipitation.png', Nrow = 3, Ncol = 3, width = 1000, height = 800)\n\n# ETP \n\ndesc_etp       <- descriptors[c(21:29)]\nbiolabels_etp  <- c(\"mm\", \"-\", rep(\"mm\",7))\nbiomains_etp   <- c(\"Annual PET\", \"PET Seasonality\", \"PET Max\", \"PET Min\", \"PET Range\", \"PET of wettest quarter\", \n                    \"PET of driest quarter\", \"PET of warmest quarter\", \"PET of coldest quarter\")\ngrouped_etp    <- grouped[,c(desc_etp, \"cluster\")]\n\ncontrastPub(descriptors = desc_etp, grouped = grouped_etp, biomains = biomains_etp,\n            biolabels = biolabels_etp, pathGraph = paste0(path, '/_figures/_contrastPlots/', run), \n            nameGraph = 'Contrast Plot ETP.png', Nrow = 3, Ncol = 3, width = 1000, height = 800)\n\n\n# New climatic variables\n\ndesc_water          <- descriptors[c(30:31)]\nbiolabels_water     <- c(\"Number Months\", \"mm\")\nbiomains_water      <- c(\"Consecutive Months with less \\n Prec than PET\", \"Sum of water deficit during dry season\")\ngrouped_water       <- grouped[c(desc_water, \"cluster\")]\nnamesWater          <- paste0(\"bio_\", 30:31)\n\ncontrastPub(descriptors = desc_water, grouped = grouped_water, biomains = biomains_water,\n            biolabels = biolabels_water, pathGraph = paste0(path, '/_figures/_contrastPlots/', run), \n            nameGraph = 'Contrast Plot Water.png', Nrow = 1, Ncol = 2, width = 1200, height = 600) \n\n# Soils\n\n# descriptors_soils           <- descriptors[c(32:34)]\n# biolabels_soils             <- c(\"v%\", \"v%\", \"pH\")\n# biomains_soils              <- c(\"Available water capacity (v%) \\n of the fine earth\", \"Moisture content (v%) of the \\n fine earth at saturation\", \"pH (x 10) of soil-water solution\")\n# grouped_soils               <- grouped[,c(descriptors_soils, \"cluster\")]\n# nameSoils                   <- paste0(\"bio_\", 32:34)\n\n\n\n\n",
    "created" : 1505158342997.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "468537567",
    "id" : "81CED76A",
    "lastKnownWriteTime" : 1506970353,
    "last_content_update" : 1506970353894,
    "path" : "W:/_cam/_codes/_r/_RF/0_clusterAnalysisPlots.R",
    "project_path" : "0_clusterAnalysisPlots.R",
    "properties" : {
        "source_window_id" : ""
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}